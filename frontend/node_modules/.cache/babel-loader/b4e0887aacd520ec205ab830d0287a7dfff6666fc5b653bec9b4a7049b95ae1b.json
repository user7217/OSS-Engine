{"ast":null,"code":"var _jsxFileName = \"/Users/harsha1/Documents/OSS-Engine/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FilterPanel from \"../components/FilterPanel\";\nimport ResultsList from \"../components/ResultsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageOptions = [\"Python\", \"JavaScript\", \"Java\", \"Kotlin\", \"C++\", \"TypeScript\", \"Go\", \"Ruby\"];\nconst topicOptions = [\"machine-learning\", \"android\", \"web\", \"devops\", \"data-science\", \"security\", \"mobile\"];\nconst initialFilters = {\n  keywords: \"\",\n  language: \"\",\n  topics: [],\n  minGoodFirstIssues: 0,\n  maxGoodFirstIssues: 1000,\n  recentCommitDays: 90\n};\nconst MainPage = () => {\n  _s();\n  const [filters, setFilters] = useState(initialFilters);\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSearch = searchFilters => {\n    console.log(\"Submitting search:\", searchFilters); // Debug\n    setLoading(true);\n    fetch(\"/search_and_score\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        keywords: searchFilters.keywords,\n        language: searchFilters.language,\n        topics: searchFilters.topics,\n        min_good_first_issues: searchFilters.minGoodFirstIssues,\n        max_good_first_issues: searchFilters.maxGoodFirstIssues,\n        recent_commit_days: searchFilters.recentCommitDays\n      })\n    }).then(res => res.json()).then(data => setRepos(data)).catch(console.error).finally(() => setLoading(false));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(FilterPanel, {\n      filters: filters,\n      onFiltersChange: setFilters,\n      onSearchClick: handleSearch,\n      languageOptions: languageOptions,\n      topicOptions: topicOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsList, {\n      repos: repos,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"7yPfVbUc6tTwKFG7vYir65opZfQ=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","FilterPanel","ResultsList","jsxDEV","_jsxDEV","languageOptions","topicOptions","initialFilters","keywords","language","topics","minGoodFirstIssues","maxGoodFirstIssues","recentCommitDays","MainPage","_s","filters","setFilters","repos","setRepos","loading","setLoading","handleSearch","searchFilters","console","log","fetch","method","headers","body","JSON","stringify","min_good_first_issues","max_good_first_issues","recent_commit_days","then","res","json","data","catch","error","finally","className","children","onFiltersChange","onSearchClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harsha1/Documents/OSS-Engine/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport FilterPanel, { Filters } from \"../components/FilterPanel\";\nimport ResultsList from \"../components/ResultsList\";\n\nconst languageOptions = [\"Python\", \"JavaScript\", \"Java\", \"Kotlin\", \"C++\", \"TypeScript\", \"Go\", \"Ruby\"];\nconst topicOptions = [\"machine-learning\", \"android\", \"web\", \"devops\", \"data-science\", \"security\", \"mobile\"];\nconst initialFilters: Filters = {\n  keywords: \"\",\n  language: \"\",\n  topics: [],\n  minGoodFirstIssues: 0,\n  maxGoodFirstIssues: 1000,\n  recentCommitDays: 90,\n};\n\nconst MainPage: React.FC = () => {\n  const [filters, setFilters] = useState<Filters>(initialFilters);\n  const [repos, setRepos] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = (searchFilters: Filters) => {\n    console.log(\"Submitting search:\", searchFilters); // Debug\n    setLoading(true);\n    fetch(\"/search_and_score\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        keywords: searchFilters.keywords,\n        language: searchFilters.language,\n        topics: searchFilters.topics,\n        min_good_first_issues: searchFilters.minGoodFirstIssues,\n        max_good_first_issues: searchFilters.maxGoodFirstIssues,\n        recent_commit_days: searchFilters.recentCommitDays,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => setRepos(data))\n      .catch(console.error)\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <div className=\"main-page\">\n      <FilterPanel\n        filters={filters}\n        onFiltersChange={setFilters}\n        onSearchClick={handleSearch}\n        languageOptions={languageOptions}\n        topicOptions={topicOptions}\n      />\n      <ResultsList repos={repos} loading={loading} />\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}