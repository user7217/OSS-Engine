{"ast":null,"code":"var _jsxFileName = \"/Users/harsha1/Documents/OSS-Engine/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FilterPanel from \"../components/FilterPanel\";\nimport ResultsList from \"../components/ResultsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageOptions = [\"Python\", \"JavaScript\", \"Java\", \"Kotlin\", \"C++\", \"TypeScript\", \"Go\", \"Ruby\"];\nconst topicOptions = [\"machine-learning\", \"android\", \"web\", \"devops\", \"data-science\", \"security\", \"mobile\"];\nconst initialFilters = {\n  keywords: \"\",\n  language: \"\",\n  topics: [],\n  minGoodFirstIssues: 0,\n  maxGoodFirstIssues: 1000,\n  recentCommitDays: 90\n};\nconst MainPage = () => {\n  _s();\n  const [filters, setFilters] = useState(initialFilters);\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setLoading(true);\n      fetch(\"/search_and_score\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          keywords: filters.keywords,\n          language: filters.language,\n          topics: filters.topics,\n          min_good_first_issues: filters.minGoodFirstIssues,\n          max_good_first_issues: filters.maxGoodFirstIssues,\n          recent_commit_days: filters.recentCommitDays\n        })\n      }).then(res => res.json()).then(data => setRepos(data)).catch(console.error).finally(() => setLoading(false));\n    }, 300);\n    return () => clearTimeout(handler);\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(FilterPanel, {\n      filters: filters,\n      onFiltersChange: setFilters,\n      languageOptions: languageOptions,\n      topicOptions: topicOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsList, {\n      repos: repos,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"b4yWfR/Sq14t87FT8Jh0bXliPMc=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","FilterPanel","ResultsList","jsxDEV","_jsxDEV","languageOptions","topicOptions","initialFilters","keywords","language","topics","minGoodFirstIssues","maxGoodFirstIssues","recentCommitDays","MainPage","_s","filters","setFilters","repos","setRepos","loading","setLoading","handler","setTimeout","fetch","method","headers","body","JSON","stringify","min_good_first_issues","max_good_first_issues","recent_commit_days","then","res","json","data","catch","console","error","finally","clearTimeout","className","children","onFiltersChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harsha1/Documents/OSS-Engine/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FilterPanel, { Filters } from \"../components/FilterPanel\";\nimport ResultsList from \"../components/ResultsList\";\n\nconst languageOptions = [\"Python\", \"JavaScript\", \"Java\", \"Kotlin\", \"C++\", \"TypeScript\", \"Go\", \"Ruby\"];\n\nconst topicOptions = [\n  \"machine-learning\",\n  \"android\",\n  \"web\",\n  \"devops\",\n  \"data-science\",\n  \"security\",\n  \"mobile\",\n];\n\nconst initialFilters: Filters = {\n  keywords: \"\",\n  language: \"\",\n  topics: [],\n  minGoodFirstIssues: 0,\n  maxGoodFirstIssues: 1000,\n  recentCommitDays: 90,\n};\n\nconst MainPage: React.FC = () => {\n  const [filters, setFilters] = useState<Filters>(initialFilters);\n  const [repos, setRepos] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setLoading(true);\n      fetch(\"/search_and_score\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          keywords: filters.keywords,\n          language: filters.language,\n          topics: filters.topics,\n          min_good_first_issues: filters.minGoodFirstIssues,\n          max_good_first_issues: filters.maxGoodFirstIssues,\n          recent_commit_days: filters.recentCommitDays,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => setRepos(data))\n        .catch(console.error)\n        .finally(() => setLoading(false));\n    }, 300);\n\n    return () => clearTimeout(handler);\n  }, [filters]);\n\n  return (\n    <div className=\"main-page\">\n      <FilterPanel filters={filters} onFiltersChange={setFilters} languageOptions={languageOptions} topicOptions={topicOptions} />\n      <ResultsList repos={repos} loading={loading} />\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}